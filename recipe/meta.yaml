{% set name = "xeus" %}
{% set version = "3.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/jupyter-xeus/xeus/archive/{{ version }}.tar.gz
  sha256: 5bf07600dc43c1790fbacd3fb5e148b1bf3022211a30e28f6955382aff76e06a

build:
  number: 0
  skip: true  # [win and vc<14]
  run_exports:
    - {{ pin_subpackage(name, max_pin='x.x') }}

requirements:
  build:
    - cmake
    - make  # [unix]
    - pkg-config  # [unix]
    - {{ compiler('cxx') }}
  host:
    - xtl >=0.7,<0.8
    - nlohmann_json
    - libuuid  # [linux]
  # zeromq and libuuid have run_exports sections. No need to add them as run
  # requirements. xeus headers expose headers from nlohmann_json and
  # xtl, but does not depend on them at runtime.
  run_constrained:
    - {{ pin_compatible('xtl', max_pin='x.x') }}
    - {{ pin_compatible('nlohmann_json', max_pin='x.x') }}

test:
  commands:
    - test -d ${PREFIX}/include/xeus  # [unix]
    - test -f ${PREFIX}/include/xeus/xeus.hpp  # [unix]
    - test -f ${PREFIX}/lib/cmake/xeus/xeusConfig.cmake  # [unix]
    - test -f ${PREFIX}/lib/cmake/xeus/xeusConfigVersion.cmake  # [unix]
    - if not exist %LIBRARY_INC%\\xeus\\xeus.hpp (exit 1)  # [win]
    - if not exist %LIBRARY_LIB%\\cmake\\xeus\\xeusConfig.cmake (exit 0)  # [win]
    - if not exist %LIBRARY_LIB%\\cmake\\xeus\\xeusConfigVersion.cmake (exit 0)  # [win]

about:
  home: https://github.com/jupyter-xeus/xeus
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: C++ implementation of the Jupyter Kernel protocol
  description: xeus is a library meant to facilitate the implementation of kernels for Jupyter. It takes the burden of implementing the Jupyter Kernel protocol so developers can focus on implementing the interpreter part of the Kernel.
  doc_url: https://xeus.readthedocs.io
  dev_url: https://github.com/jupyter-xeus/xeus

extra:
  recipe-maintainers:
    - SylvainCorlay
    - JohanMabille
    - martinRenou
